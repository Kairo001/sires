# Generated by Django 5.0.3 on 2024-04-10 00:37

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "professional_id",
                    models.CharField(
                        help_text="Número de cédula profesional.",
                        max_length=8,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El número de cédula profesional no es válido.",
                                regex="^[0-9]{8}$",
                            )
                        ],
                        verbose_name="Professional ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Doctor",
                "verbose_name_plural": "Doctores",
                "db_table": "doctor",
            },
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "curp",
                    models.CharField(
                        help_text="Clave Única de Registro de Población.",
                        max_length=18,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="La CURP no es válida.",
                                regex="^[A-Z]{4}[0-9]{6}[HM][A-Z]{5}[0-9]{2}$",
                            )
                        ],
                        verbose_name="CURP",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nombre del empleado.",
                        max_length=100,
                        verbose_name="Name",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        help_text="Apellido del empleado.",
                        max_length=100,
                        verbose_name="Last Name",
                    ),
                ),
                (
                    "second_last_name",
                    models.CharField(
                        blank=True,
                        help_text="Segundo apellido del empleado.",
                        max_length=100,
                        null=True,
                        verbose_name="Second Last Name",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        help_text="Fecha de nacimiento del empleado.",
                        verbose_name="Birth Date",
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Altura del empleado.",
                        max_digits=3,
                        null=True,
                        verbose_name="Height",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True,
                        help_text="Dirección del empleado.",
                        null=True,
                        verbose_name="Address",
                    ),
                ),
                (
                    "mobile_phone",
                    models.CharField(
                        blank=True,
                        help_text="Número de teléfono móvil del empleado.",
                        max_length=10,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El número de teléfono móvil no es válido.",
                                regex="^[0-9]{10}$",
                            )
                        ],
                        verbose_name="Mobile Phone",
                    ),
                ),
                (
                    "social_security_number",
                    models.CharField(
                        blank=True,
                        help_text="Número de seguro social.",
                        max_length=11,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El número de seguro social no es válido.",
                                regex="^[0-9]{11}$",
                            )
                        ],
                        verbose_name="Social Security Number",
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        help_text="Código postal del empleado.",
                        max_length=5,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El código postal debe contener 5 dígitos.",
                                regex="^[0-9]{5}$",
                            )
                        ],
                        verbose_name="Postal Code",
                    ),
                ),
            ],
            options={
                "verbose_name": "Empleado",
                "verbose_name_plural": "Empleados",
                "db_table": "employee",
            },
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Paciente",
                "verbose_name_plural": "Pacientes",
                "db_table": "patient",
            },
        ),
    ]
